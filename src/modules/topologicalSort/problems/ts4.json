{
  "problemId": "ts4",
  "title": "Course Schedule II — Construct a Valid Order",
  "difficulty": "Medium",
  "category": "Graph",
  "moduleId": "topological_sort",
  "submoduleId": "fundamentals",
  "tags": ["Graph", "Ordering Construction", "Kahn's Algorithm", "BFS"],
  "description": "Given numCourses and prerequisites return any valid course order array if possible, otherwise return [].",
  "aim": "Practice building explicit topological orderings and returning them; handle disconnected components and cycle detection.",
  "input_format": "Number of courses and list of prerequisite pairs",
  "output_format": "Array of course order or empty array if impossible",
  "max_input": 5000,
  "example": {
    "input": "numCourses=4, prerequisites=[[1,0],[2,0],[3,1],[3,2]]",
    "output": "[0,1,2,3] or [0,2,1,3]"
  },
  "examples": [
    {
      "input": "numCourses=4, prerequisites=[[1,0],[2,0],[3,1],[3,2]]",
      "output": "[0,1,2,3]",
      "explanation": "Course 0 has no prerequisites, then courses 1 and 2, finally course 3."
    },
    {
      "input": "numCourses=2, prerequisites=[[1,0],[0,1]]",
      "output": "[]",
      "explanation": "Cycle exists between courses 0 and 1, so no valid ordering possible."
    }
  ],
  "constraints": [
    "1 <= numCourses <= 5000",
    "0 <= prerequisites.length <= 5000",
    "prerequisites[i].length == 2",
    "0 <= ai, bi < numCourses",
    "All the pairs prerequisites[i] are unique"
  ],
  "approach": "Use Kahn's algorithm to build the topological order. If the result contains all courses, return it; otherwise return empty array (cycle detected).",
  "timeComplexity": "O(V + E)",
  "spaceComplexity": "O(V + E)",
  "playground": {
    "initialState": {
      "numCourses": 4,
      "prerequisites": [[1,0],[2,0],[3,1],[3,2]],
      "graph": {"0": [1,2], "1": [3], "2": [3], "3": []},
      "inDegrees": [0, 1, 1, 2],
      "queue": [0],
      "result": [],
      "step": 0
    }
  },
  "ui_config": {
    "visualizer": {
      "type": "course_ordering",
      "show_in_degrees": true,
      "show_queue": true,
      "show_result_building": true,
      "animate_order_construction": true
    },
    "colors": {
      "course_available": "#4CAF50",
      "course_in_queue": "#FFC107",
      "course_in_result": "#2196F3",
      "course_blocked": "#F44336",
      "dependency_satisfied": "#4CAF50",
      "dependency_pending": "#666"
    }
  },
  "jarvis_prompts": {
    "welcome": "Now let's build an actual course schedule! 📋 We'll construct a valid ordering step by step.",
    "queue_explanation": "We start with courses that have no prerequisites - they can be taken immediately!",
    "processing_course": "Taking this course unlocks other courses by satisfying their prerequisites!",
    "result_building": "Excellent! We're building our course schedule by adding courses as they become available.",
    "cycle_detected": "⚠️ We couldn't schedule all courses - there must be a cycle in the prerequisites!",
    "success": "🎉 Perfect! Here's a valid course schedule that respects all prerequisites!"
  },
  "validation": {
    "output": {
      "validation_type": "topological_order_array",
      "check_completeness": true,
      "allow_multiple_valid": true
    }
  },
  "learning_objectives": [
    "Build explicit topological orderings using Kahn's algorithm",
    "Handle both valid and invalid cases",
    "Understand order construction process",
    "Apply to real-world scheduling problems"
  ],
  "algorithm_focus": "Kahn",
  "recommended_approach": "Use Kahn's algorithm - it naturally builds the ordering as it processes nodes"
}
